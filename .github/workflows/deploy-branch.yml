name: Deploy Branch to GitHub Pages

on:
  push:
    branches:
      - '**'  # Trigger on all branches
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.ref }}
          path: source
          fetch-depth: 0

      - name: Configure git credentials for authenticated operations
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git config --global credential.helper store
          echo "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com" > ~/.git-credentials

      - name: Setup gh-pages branch
        run: |
          # Check if gh-pages branch exists remotely
          if git ls-remote --exit-code --heads https://github.com/${{ github.repository }}.git gh-pages >/dev/null 2>&1; then
            echo "gh-pages branch exists, cloning it"
            git clone --branch gh-pages --single-branch https://github.com/${{ github.repository }}.git gh-pages
          else
            echo "gh-pages branch doesn't exist, initializing it"
            mkdir -p gh-pages
            cd gh-pages
            git init
            git checkout -b gh-pages
            git remote add origin https://github.com/${{ github.repository }}.git
            echo "# GitHub Pages" > README.md
            echo "This branch contains deployed content from all branches." >> README.md
            git add README.md
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git commit -m "Initialize gh-pages branch"
          fi

      - name: Prepare branch name for folder
        id: branch-name
        run: |
          # Convert branch name to safe folder name
          BRANCH_NAME="${{ github.ref_name }}"
          SAFE_BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9._-]/-/g')
          echo "safe_name=$SAFE_BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "Branch: $BRANCH_NAME -> Folder: $SAFE_BRANCH_NAME"

      - name: Deploy branch content
        run: |
          cd gh-pages
          BRANCH_FOLDER="${{ steps.branch-name.outputs.safe_name }}"

          # Remove old content for this branch if it exists
          if [ -d "$BRANCH_FOLDER" ]; then
            echo "Removing old content for branch: $BRANCH_FOLDER"
            rm -rf "$BRANCH_FOLDER"
          fi

          # Create branch folder
          mkdir -p "$BRANCH_FOLDER"

          # Copy content from source (excluding .git, node_modules, etc)
          echo "Copying content to: $BRANCH_FOLDER"
          rsync -av --exclude='.git' \
                    --exclude='node_modules' \
                    --exclude='test-results' \
                    --exclude='playwright-report' \
                    --exclude='blob-report' \
                    --exclude='artifacts' \
                    ../source/ "$BRANCH_FOLDER/"

          # Generate branch index page listing all branches dynamically
          BRANCHES=$(ls -d */ | grep -v '^index.html$' | sed 's#/##')
          cat > branchindex.html <<'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <title>Capy Branch Deployments</title>
          </head>
          <body>
            <h1>Capy Image Generator - Branch Deployments</h1>
            <ul>
          EOF
          for branch in $BRANCHES; do
            echo "    <li><a href='${branch}/'>${branch}</a></li>" >> branchindex.html
          done
          cat >> branchindex.html <<'EOF'
            </ul>
          </body>
          </html>
          EOF

          # Commit and push
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .

          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Deploy branch: ${{ github.ref_name }} (commit: ${{ github.sha }})"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} gh-pages --force
            echo "Published branch to: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/$BRANCH_FOLDER/"
            echo "Branch index available at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/branchindex.html"
          fi

  # Deploy to GitHub Pages from gh-pages branch
  deploy-pages:
    needs: deploy-branch
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: gh-pages

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
